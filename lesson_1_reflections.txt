How did viewing a diff between two versions of a file help you see the bug that was introduced?

The comparision showed me where the differences were. 
It made it easy for me to look where I expected changes
It also helped me to see places where i didn't expect to see a difference

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can compare to your past work to your new work.
You can reuse code that solves a problem you solved before
You can appreciate how much you've learned

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Con: you have to think about saving
Pro: save points have more meaning
Con: You may forget to say
Con: You may save too much or too little
Pro: You can leave messages explaining why you saved
Pro: It helps others see what you affected in the code

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

I think this is so because Git assumes there is going to be a relationship between the code in the files 
whereas Google docs assumes each file is independent 
or else you would put all the content in one document


How can you use the commands git log and git diff to view the history of files?

git log shows you a list of all the commits you made
each commit covers one logical change
then using git diff you can compare the changes made during each commit

How might using version control make you more confident to make changes that could break something?

its easy to go back and find where you made a mistake
